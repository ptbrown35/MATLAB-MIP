function RTW_rtwnameSIDMap() {
	this.rtwnameHashMap = new Array();
	this.sidHashMap = new Array();
	this.rtwnameHashMap["<Root>"] = {sid: "fccr_balance"};
	this.sidHashMap["fccr_balance"] = {rtwname: "<Root>"};
	this.rtwnameHashMap["<S1>"] = {sid: "fccr_balance:42"};
	this.sidHashMap["fccr_balance:42"] = {rtwname: "<S1>"};
	this.rtwnameHashMap["<S2>"] = {sid: "fccr_balance:98"};
	this.sidHashMap["fccr_balance:98"] = {rtwname: "<S2>"};
	this.rtwnameHashMap["<S3>"] = {sid: "fccr_balance:99"};
	this.sidHashMap["fccr_balance:99"] = {rtwname: "<S3>"};
	this.rtwnameHashMap["<S4>"] = {sid: "fccr_balance:76"};
	this.sidHashMap["fccr_balance:76"] = {rtwname: "<S4>"};
	this.rtwnameHashMap["<S5>"] = {sid: "fccr_balance:78"};
	this.sidHashMap["fccr_balance:78"] = {rtwname: "<S5>"};
	this.rtwnameHashMap["<Root>/Button"] = {sid: "fccr_balance:63"};
	this.sidHashMap["fccr_balance:63"] = {rtwname: "<Root>/Button"};
	this.rtwnameHashMap["<Root>/Compare To Zero"] = {sid: "fccr_balance:42"};
	this.sidHashMap["fccr_balance:42"] = {rtwname: "<Root>/Compare To Zero"};
	this.rtwnameHashMap["<Root>/D1 Inner Loop Controller"] = {sid: "fccr_balance:49"};
	this.sidHashMap["fccr_balance:49"] = {rtwname: "<Root>/D1 Inner Loop Controller"};
	this.rtwnameHashMap["<Root>/D1_GAIN"] = {sid: "fccr_balance:54"};
	this.sidHashMap["fccr_balance:54"] = {rtwname: "<Root>/D1_GAIN"};
	this.rtwnameHashMap["<Root>/D2 Outer Loop Controller"] = {sid: "fccr_balance:50"};
	this.sidHashMap["fccr_balance:50"] = {rtwname: "<Root>/D2 Outer Loop Controller"};
	this.rtwnameHashMap["<Root>/D2_GAIN"] = {sid: "fccr_balance:77"};
	this.sidHashMap["fccr_balance:77"] = {rtwname: "<Root>/D2_GAIN"};
	this.rtwnameHashMap["<Root>/Data Type Conversion"] = {sid: "fccr_balance:65"};
	this.sidHashMap["fccr_balance:65"] = {rtwname: "<Root>/Data Type Conversion"};
	this.rtwnameHashMap["<Root>/Degrees to Radians"] = {sid: "fccr_balance:98"};
	this.sidHashMap["fccr_balance:98"] = {rtwname: "<Root>/Degrees to Radians"};
	this.rtwnameHashMap["<Root>/Discrete Filter"] = {sid: "fccr_balance:109"};
	this.sidHashMap["fccr_balance:109"] = {rtwname: "<Root>/Discrete Filter"};
	this.rtwnameHashMap["<Root>/Discrete Filter1"] = {sid: "fccr_balance:111"};
	this.sidHashMap["fccr_balance:111"] = {rtwname: "<Root>/Discrete Filter1"};
	this.rtwnameHashMap["<Root>/Discrete-Time Integrator"] = {sid: "fccr_balance:88"};
	this.sidHashMap["fccr_balance:88"] = {rtwname: "<Root>/Discrete-Time Integrator"};
	this.rtwnameHashMap["<Root>/ENCODER_CHANNEL_L"] = {sid: "fccr_balance:72"};
	this.sidHashMap["fccr_balance:72"] = {rtwname: "<Root>/ENCODER_CHANNEL_L"};
	this.rtwnameHashMap["<Root>/ENCODER_CHANNEL_R"] = {sid: "fccr_balance:62"};
	this.sidHashMap["fccr_balance:62"] = {rtwname: "<Root>/ENCODER_CHANNEL_R"};
	this.rtwnameHashMap["<Root>/ENCODER_POLARITY_L"] = {sid: "fccr_balance:74"};
	this.sidHashMap["fccr_balance:74"] = {rtwname: "<Root>/ENCODER_POLARITY_L"};
	this.rtwnameHashMap["<Root>/ENCODER_POLARITY_R"] = {sid: "fccr_balance:73"};
	this.sidHashMap["fccr_balance:73"] = {rtwname: "<Root>/ENCODER_POLARITY_R"};
	this.rtwnameHashMap["<Root>/Gain"] = {sid: "fccr_balance:83"};
	this.sidHashMap["fccr_balance:83"] = {rtwname: "<Root>/Gain"};
	this.rtwnameHashMap["<Root>/LED"] = {sid: "fccr_balance:1"};
	this.sidHashMap["fccr_balance:1"] = {rtwname: "<Root>/LED"};
	this.rtwnameHashMap["<Root>/MATLAB System"] = {sid: "fccr_balance:37"};
	this.sidHashMap["fccr_balance:37"] = {rtwname: "<Root>/MATLAB System"};
	this.rtwnameHashMap["<Root>/MOTOR_CHANNEL_L"] = {sid: "fccr_balance:69"};
	this.sidHashMap["fccr_balance:69"] = {rtwname: "<Root>/MOTOR_CHANNEL_L"};
	this.rtwnameHashMap["<Root>/MOTOR_CHANNEL_R"] = {sid: "fccr_balance:61"};
	this.sidHashMap["fccr_balance:61"] = {rtwname: "<Root>/MOTOR_CHANNEL_R"};
	this.rtwnameHashMap["<Root>/MOTOR_POLARITY_L"] = {sid: "fccr_balance:71"};
	this.sidHashMap["fccr_balance:71"] = {rtwname: "<Root>/MOTOR_POLARITY_L"};
	this.rtwnameHashMap["<Root>/MOTOR_POLARITY_R"] = {sid: "fccr_balance:70"};
	this.sidHashMap["fccr_balance:70"] = {rtwname: "<Root>/MOTOR_POLARITY_R"};
	this.rtwnameHashMap["<Root>/RT x10"] = {sid: "fccr_balance:68"};
	this.sidHashMap["fccr_balance:68"] = {rtwname: "<Root>/RT x10"};
	this.rtwnameHashMap["<Root>/Radians to Degrees"] = {sid: "fccr_balance:99"};
	this.sidHashMap["fccr_balance:99"] = {rtwname: "<Root>/Radians to Degrees"};
	this.rtwnameHashMap["<Root>/Scope"] = {sid: "fccr_balance:100"};
	this.sidHashMap["fccr_balance:100"] = {rtwname: "<Root>/Scope"};
	this.rtwnameHashMap["<Root>/Sine Wave"] = {sid: "fccr_balance:41"};
	this.sidHashMap["fccr_balance:41"] = {rtwname: "<Root>/Sine Wave"};
	this.rtwnameHashMap["<Root>/Slider D1_GAIN"] = {sid: "fccr_balance:76"};
	this.sidHashMap["fccr_balance:76"] = {rtwname: "<Root>/Slider D1_GAIN"};
	this.rtwnameHashMap["<Root>/Slider D2_GAIN"] = {sid: "fccr_balance:78"};
	this.sidHashMap["fccr_balance:78"] = {rtwname: "<Root>/Slider D2_GAIN"};
	this.rtwnameHashMap["<Root>/Stop Simulation"] = {sid: "fccr_balance:64"};
	this.sidHashMap["fccr_balance:64"] = {rtwname: "<Root>/Stop Simulation"};
	this.rtwnameHashMap["<Root>/Sum"] = {sid: "fccr_balance:58"};
	this.sidHashMap["fccr_balance:58"] = {rtwname: "<Root>/Sum"};
	this.rtwnameHashMap["<Root>/Sum1"] = {sid: "fccr_balance:59"};
	this.sidHashMap["fccr_balance:59"] = {rtwname: "<Root>/Sum1"};
	this.rtwnameHashMap["<Root>/Sum2"] = {sid: "fccr_balance:90"};
	this.sidHashMap["fccr_balance:90"] = {rtwname: "<Root>/Sum2"};
	this.rtwnameHashMap["<Root>/Theta Ref"] = {sid: "fccr_balance:60"};
	this.sidHashMap["fccr_balance:60"] = {rtwname: "<Root>/Theta Ref"};
	this.rtwnameHashMap["<Root>/Trigonometric Function"] = {sid: "fccr_balance:82"};
	this.sidHashMap["fccr_balance:82"] = {rtwname: "<Root>/Trigonometric Function"};
	this.rtwnameHashMap["<Root>/Zero-Order Hold"] = {sid: "fccr_balance:79"};
	this.sidHashMap["fccr_balance:79"] = {rtwname: "<Root>/Zero-Order Hold"};
	this.rtwnameHashMap["<Root>/data"] = {sid: "fccr_balance:38"};
	this.sidHashMap["fccr_balance:38"] = {rtwname: "<Root>/data"};
	this.rtwnameHashMap["<S1>/u"] = {sid: "fccr_balance:42:1"};
	this.sidHashMap["fccr_balance:42:1"] = {rtwname: "<S1>/u"};
	this.rtwnameHashMap["<S1>/Compare"] = {sid: "fccr_balance:42:2"};
	this.sidHashMap["fccr_balance:42:2"] = {rtwname: "<S1>/Compare"};
	this.rtwnameHashMap["<S1>/Constant"] = {sid: "fccr_balance:42:3"};
	this.sidHashMap["fccr_balance:42:3"] = {rtwname: "<S1>/Constant"};
	this.rtwnameHashMap["<S1>/y"] = {sid: "fccr_balance:42:5"};
	this.sidHashMap["fccr_balance:42:5"] = {rtwname: "<S1>/y"};
	this.rtwnameHashMap["<S2>/Degrees in"] = {sid: "fccr_balance:98:179"};
	this.sidHashMap["fccr_balance:98:179"] = {rtwname: "<S2>/Degrees in"};
	this.rtwnameHashMap["<S2>/Gain1"] = {sid: "fccr_balance:98:180"};
	this.sidHashMap["fccr_balance:98:180"] = {rtwname: "<S2>/Gain1"};
	this.rtwnameHashMap["<S2>/Radians out"] = {sid: "fccr_balance:98:181"};
	this.sidHashMap["fccr_balance:98:181"] = {rtwname: "<S2>/Radians out"};
	this.rtwnameHashMap["<S3>/Radians in"] = {sid: "fccr_balance:99:197"};
	this.sidHashMap["fccr_balance:99:197"] = {rtwname: "<S3>/Radians in"};
	this.rtwnameHashMap["<S3>/Gain"] = {sid: "fccr_balance:99:198"};
	this.sidHashMap["fccr_balance:99:198"] = {rtwname: "<S3>/Gain"};
	this.rtwnameHashMap["<S3>/Degrees out"] = {sid: "fccr_balance:99:199"};
	this.sidHashMap["fccr_balance:99:199"] = {rtwname: "<S3>/Degrees out"};
	this.rtwnameHashMap["<S4>/u"] = {sid: "fccr_balance:76:30"};
	this.sidHashMap["fccr_balance:76:30"] = {rtwname: "<S4>/u"};
	this.rtwnameHashMap["<S4>/Slider Gain"] = {sid: "fccr_balance:76:31"};
	this.sidHashMap["fccr_balance:76:31"] = {rtwname: "<S4>/Slider Gain"};
	this.rtwnameHashMap["<S4>/y"] = {sid: "fccr_balance:76:32"};
	this.sidHashMap["fccr_balance:76:32"] = {rtwname: "<S4>/y"};
	this.rtwnameHashMap["<S5>/u"] = {sid: "fccr_balance:78:30"};
	this.sidHashMap["fccr_balance:78:30"] = {rtwname: "<S5>/u"};
	this.rtwnameHashMap["<S5>/Slider Gain"] = {sid: "fccr_balance:78:31"};
	this.sidHashMap["fccr_balance:78:31"] = {rtwname: "<S5>/Slider Gain"};
	this.rtwnameHashMap["<S5>/y"] = {sid: "fccr_balance:78:32"};
	this.sidHashMap["fccr_balance:78:32"] = {rtwname: "<S5>/y"};
	this.getSID = function(rtwname) { return this.rtwnameHashMap[rtwname];}
	this.getRtwname = function(sid) { return this.sidHashMap[sid];}
}
RTW_rtwnameSIDMap.instance = new RTW_rtwnameSIDMap();
